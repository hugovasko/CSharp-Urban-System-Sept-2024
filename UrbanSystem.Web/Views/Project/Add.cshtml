@using UrbanSystem.Web.ViewModels.Locations
@model UrbanSystem.Web.ViewModels.Projects.ProjectFormViewModel

@{
    ViewData["Title"] = "Add Project";
}

<div class="container my-5">
    <h1 class="text-center mb-4">Add Project</h1>

    <form asp-action="Add" method="post" enctype="multipart/form-data" class="shadow-sm p-4 bg-light rounded">
        <!-- Project Name -->
        <div class="mb-3">
            <label asp-for="Name" class="form-label fw-bold">Project Name</label>
            <input asp-for="Name" class="form-control" placeholder="Enter project name" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <!-- Image URL -->
        <div class="mb-3">
            <label asp-for="ImageUrl" class="form-label fw-bold">Image URL</label>
            <input asp-for="ImageUrl" class="form-control" type="url" placeholder="Enter image URL" />
            <span asp-validation-for="ImageUrl" class="text-danger"></span>
        </div>

        <!-- Description -->
        <div class="mb-3">
            <label asp-for="Description" class="form-label fw-bold">Description</label>
            <textarea asp-for="Description" class="form-control" rows="4" placeholder="Provide a detailed description"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <!-- Desired Sum -->
        <div class="mb-3">
            <label asp-for="DesiredSum" class="form-label fw-bold">Desired Sum</label>
            <input asp-for="DesiredSum" class="form-control" type="number" step="0.01" min="0" placeholder="Enter desired sum" />
            <span asp-validation-for="DesiredSum" class="text-danger"></span>
        </div>

        <!-- Location (City) -->
        <div class="mb-3">
            <label asp-for="LocationId" class="form-label fw-bold">Location</label>
            <select asp-for="LocationId" class="form-select">
                <option value="">Select a City</option>
                @foreach (var city in Model.Cities.OrderBy(c => c.Text))
                {
                    <option value="@city.Value">@city.Text</option>
                }
            </select>
            <span asp-validation-for="LocationId" class="text-danger"></span>
        </div>

        <!-- Latitude -->
        <div class="mb-3">
            <label asp-for="Latitude" class="form-label fw-bold">Latitude</label>
            <input asp-for="Latitude" id="latitude" class="form-control" readonly />
            <span asp-validation-for="Latitude" class="text-danger"></span>
        </div>

        <!-- Longitude -->
        <div class="mb-3">
            <label asp-for="Longitude" class="form-label fw-bold">Longitude</label>
            <input asp-for="Longitude" id="longitude" class="form-control" readonly />
            <span asp-validation-for="Longitude" class="text-danger"></span>
        </div>

        <!-- Google Map -->
        <div class="mb-3">
            <label class="form-label fw-bold">Location on Map</label>
            <div id="map" style="height: 400px;"></div>
        </div>

        <div class="d-flex justify-content-between mt-4">
            <button type="submit" class="btn btn-primary">Submit</button>
            <input type="button" value="Cancel" onclick="location.href='/Project/All'" class="btn btn-secondary" />
        </div>
    </form>
</div>

<!-- Google Maps Script -->
<script>
    let map, marker;

    function initMap() {
        // Default coordinates (if none are set, use a fallback location)
        const defaultCoordinates = {
            lat: @Model.Latitude != 0 ? @Model.Latitude : 42.016,
            lng: @Model.Longitude != 0 ? @Model.Longitude : 23.094
        };

        // Initialize the map
        map = new google.maps.Map(document.getElementById("map"), {
            center: defaultCoordinates,
            zoom: 15,
            mapTypeId: google.maps.MapTypeId.SATELLITE // Set the map type to satellite view
        });

        // Create a draggable marker
        marker = new google.maps.Marker({
            position: defaultCoordinates,
            map: map,
            draggable: true,
        });

        // Update the latitude and longitude input fields when the marker is moved
        google.maps.event.addListener(marker, 'dragend', function (event) {
            document.getElementById('latitude').value = event.latLng.lat();
            document.getElementById('longitude').value = event.latLng.lng();
        });

        // Update marker position when the user clicks on the map
        google.maps.event.addListener(map, 'click', function (event) {
            const clickedLocation = event.latLng;
            marker.setPosition(clickedLocation);
            document.getElementById('latitude').value = clickedLocation.lat();
            document.getElementById('longitude').value = clickedLocation.lng();
        });
    }
</script>

<!-- Load Google Maps API -->
<script async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAef8QmS-s0zWe1_CE8a83MIHL_7XZyKoU&callback=initMap&v=weekly"></script>
